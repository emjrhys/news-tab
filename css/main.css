/* Eric Meyer's Reset CSS v2.0 - http://cssreset.com */
/* line 2, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  margin: 0;
  padding: 0; }

/* line 2, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

/* line 2, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
body {
  line-height: 1; }

/* line 2, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
ol, ul {
  list-style: none; }

/* line 2, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
blockquote, q {
  quotes: none; }

/* line 2, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
blockquote:before, blockquote:after, q:before, q:after {
  content: none; }

/* line 2, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column mixin.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column-width function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * An alias for the column-gutter function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 *  Alias for edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Uncenter an element.
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Unstack an element.
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Apply a clearfix to an element.
 */
/* line 11, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
* {
  padding: 0;
  margin: 0; }

/* line 16, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
.background-image {
  position: fixed;
  height: 110%;
  width: 110%;
  top: -5%;
  left: -5%;
  z-index: -1;
  background: url(/backgrounds/1.jpg) no-repeat center center;
  background-size: cover;
  overflow: hidden; }
  /* line 28, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
  .background-image.blur {
    -webkit-filter: blur(10px);
    filter: blur(10px); }

/* line 33, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
.container {
  height: 100%;
  width: 100%;
  background-color: rgba(255, 255, 255, 0.3); }
  /* line 38, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
  .container #news {
    margin-left: 60px;
    margin-top: 40px; }
    /* line 42, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
    .container #news a {
      display: block;
      box-sizing: border-box;
      *zoom: 1;
      float: left;
      clear: none;
      text-align: inherit;
      width: 33.33333%;
      margin-left: 0%;
      margin-right: 0%;
      height: 150px;
      padding: 12px;
      transition: background-color 0.2s ease-in-out;
      cursor: pointer;
      opacity: 0; }
      /* line 344, /Users/noah/Dropbox/programming/projects/news-tab/css/jeet/_grid */
      .container #news a:before, .container #news a:after {
        content: '';
        display: table; }
      /* line 349, /Users/noah/Dropbox/programming/projects/news-tab/css/jeet/_grid */
      .container #news a:after {
        clear: both; }
      /* line 139, /Users/noah/Dropbox/programming/projects/news-tab/css/jeet/_grid */
      .container #news a:nth-of-type(3n) {
        float: right; }
      /* line 142, /Users/noah/Dropbox/programming/projects/news-tab/css/jeet/_grid */
      .container #news a:nth-of-type(3n+1) {
        clear: both; }
      /* line 56, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
      .container #news a h3 {
        margin-bottom: 10px; }
      /* line 60, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
      .container #news a span {
        margin-left: 10px; }
      /* line 64, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
      .container #news a img {
        float: left; }
      /* line 68, /Users/noah/Dropbox/programming/projects/news-tab/css/main.scss */
      .container #news a:hover {
        background-color: rgba(255, 255, 255, 0.5); }

/*# sourceMappingURL=main.css.map */